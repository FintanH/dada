    let XNor = ./type

in  let Functor = ../functor

in    λ(a : Type)
    → (   { map =
                λ(b : Type)
              → λ(c : Type)
              → λ(f : b → c)
              → λ(fa : XNor a b)
              →     let X = constructors (XNor a c)

                in  let handlers =
                          { Both    =
                                λ(xn : { head : a, tail : b })
                              → X.Both { head = xn.head, tail = f xn.tail }
                          , Neither = X.Neither
                          }

                in  merge handlers fa : XNor a c
          }
        : Functor (XNor a)
      )

