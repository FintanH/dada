  λ(a : Type)
→ λ(ea : ../eq  a)
→ λ(b : Type)
→ λ(eb : ../eq  b)
→ (   { eq =
            λ(x : ./type  a b)
          → λ(y : ./type  a b)
          → merge
            { Both    =
                  λ(xx : { head : a, tail : b })
                → merge
                  { Both    =
                        λ(yy : { head : a, tail : b })
                      → ea.eq xx.head yy.head && eb.eq xx.tail yy.tail
                  , Neither = λ(q : {}) → False
                  }
                  y
            , Neither =
                  λ(q : {})
                → merge
                  { Both    = λ(yy : { head : a, tail : b }) → False
                  , Neither = λ(q : {}) → True
                  }
                  y
            }
            x
      }
    : ../eq  (./type  a b)
  )
